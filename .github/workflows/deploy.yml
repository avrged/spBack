name: Despliegue a EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Clonar repositorio
      uses: actions/checkout@v3

    - name: Setup Java 21
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '21'
        cache: 'gradle'

    - name: Dar permisos a gradlew
      run: chmod +x gradlew

    - name: Construir el proyecto
      run: ./gradlew clean shadowJar

    - name: Verificar existencia del JAR
      run: |
        echo "Verificando JAR generado localmente..."
        if [ ! -f build/libs/spBack-1.0-all.jar ]; then
          echo "El archivo JAR no fue generado"
          exit 1
        fi
        ls -lh build/libs/spBack-1.0-all.jar

    - name: Debug SSH connection
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 10m
        script: |
          echo "SSH connection successful!"
          echo "User: $(whoami)"
          echo "Home: $HOME"
          echo "Working directory: $(pwd)"
          echo "System info: $(uname -a)"
          echo "Available disk space:"
          df -h

    - name: Crear carpetas destino en EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 10m
        script: |
          echo "Creando estructura de carpetas en EC2..."
          sudo mkdir -p /opt/apps/backend/scripts
          sudo chmod -R 755 /opt/apps/backend/
          echo "Estructura creada:"
          ls -lh /opt/apps/backend/

    - name: Copiar archivo JAR a EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        source: "build/libs/spBack-1.0-all.jar"
        target: "/opt/apps/backend/"
        strip_components: 2
        overwrite: true

    - name: Verificar archivo JAR copiado en EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 10m
        script: |
          echo "Verificando archivo JAR en EC2:"
          ls -lh /opt/apps/backend/

    - name: Copiar scripts de despliegue a EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        source: "scripts_ubuntu/"
        target: "/opt/apps/backend/scripts/"
        overwrite: true

    - name: Dar permisos de ejecución a los scripts en EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 10m
        script: |
          echo "Asignando permisos a scripts..."
          sudo chmod +x /opt/apps/backend/scripts/pre_deploy.sh
          sudo chmod +x /opt/apps/backend/scripts/post_deploy.sh
          ls -lh /opt/apps/backend/scripts/

    - name: Ejecutar pre-deploy en EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 10m
        script: |
          echo "Ejecutando script pre-deploy..."
          sudo /opt/apps/backend/scripts/pre_deploy.sh
          echo "Contenido en backend después de pre-deploy:"
          ls -lh /opt/apps/backend/

    - name: Copiar JAR nuevamente por seguridad (post pre-deploy)
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        source: "build/libs/spBack-1.0-all.jar"
        target: "/opt/apps/backend/"
        strip_components: 2
        overwrite: true

    - name: Verificar JAR final antes del post-deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 10m
        script: |
          echo "Confirmando existencia del JAR antes del post-deploy..."
          ls -lh /opt/apps/backend/

    - name: Esperar antes de ejecutar post-deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 10m
        script: |
          echo "Esperando 5 segundos para asegurar sincronización..."
          sleep 5

    - name: Ejecutar post-deploy en EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        timeout: 60s
        command_timeout: 10m
        script: |
          echo "Iniciando aplicación con post-deploy..."
          sudo /opt/apps/backend/scripts/post_deploy.sh