name: Deploy Java App to Amazon EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      branch:
        description: 'Rama a desplegar'
        required: true
        default: 'develop'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses:   actions/checkout@v4

        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Setup on jdk 21
        uses: actions/setup-java@v4
        with:
          distribution: microsoft
          java-version: '21'
          cache: 'gradle'

      - name: Make Gradle wrapper executable
        run: chmod +x gradlew

      - name: Build with Gradle and Shadowjar
        run: ./gradlew clean shadowjar

      - name: Print generated JAR path
        run: find app/build/libs -name "*.jar" -print

      - name: Move JAR to root for SCP
        id: move_jar # Asignamos un ID a este paso para referenciar sus salidas
        run: |
          JAR_FULL_PATH=$(find app/build/libs -name "app_chida-*.jar" | head -n 1)
          JAR_FILENAME=$(basename "$JAR_FULL_PATH")
          mv "$JAR_FULL_PATH" "$JAR_FILENAME"
          echo "JAR movido a la raÃ­z: $JAR_FILENAME"
          echo "moved_jar_filename=$JAR_FILENAME" >> $GITHUB_OUTPUT

      - name: Execute pre-deployment script on EC2 (Stop old app)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USER}}
          key: ${{secrets.EC2_SSH_PRIVATE_KEY}}
          script: |
            sudo /opt/apps/backend/scripts/pre-deploy

      - name: Copy JAR to  EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USER}}
          key: ${{secrets.EC2_SSH_PRIVATE_KEY}}
          source: "${{ steps.move_jar.outputs.moved_jar_filename }}"
          target: "/opt/apps/backend/"

      - name: Execute post-deployment script on EC2 (Restart app and configure systemd)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USER}}
          key: ${{secrets.EC2_SSH_PRIVATE_KEY}}
          script: |
            sudo /opt/apps/backend/scripts/post-deploy